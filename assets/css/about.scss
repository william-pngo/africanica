* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

body {

	width: 100%;
	min-height: 100vh;
	border-radius: 0%;
	background:
	linear-gradient(
		rgba(125,126,125,0.75),
		rgba(14,14,14,0.55)
		),

	url("../images/about/bg.jpeg") no-repeat center center fixed;

	background-size: cover;
	position: relative;
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;

	nav {

		.set1 {

			li {

				margin: 3px;
				letter-spacing: 2px;
			}
		}
	}

	main {

		h1, p {
			text-shadow: 2px 2px 4px #000000;
		}
	}

	footer {

		position: absolute;
		bottom: 0;
		width: 100%;
		height: 2.5rem;

	}

	#content-wrap {
		border: 5px solid white;
		padding-top: 2.5rem;
		padding-bottom: 2.5rem;
		position: fixed;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%)
	}
}

$min_width: 320px;
$max_width: 1200px;
$min_font: 12px;
$max_font: 24px;

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

main {
  @include fluid-type($min_width, $max_width, $min_font, $max_font);
}

footer {
	font-size: 15px;
}

// @media only screen and (max-width: 999px) and (max-height: 800px) {

// 	#content-wrap {

// 		color: black;
// 		border: none;
// 		padding: 0;
// 		margin: 0;

// 		h1 {

// 			font-size: 1em;
// 		}

// 		p {

// 			font-size: 1em;
// 		}
// 	}
// }